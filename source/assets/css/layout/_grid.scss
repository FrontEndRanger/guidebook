%first {
  margin-left: 0 !important;
}

%last {
  margin-right: 0 !important;
}

.wrapper {
  max-width: $layout-width;
  _width: $layout-width;
  margin-left: auto;
  margin-right: auto;
  @include clearfix;
}

.first {
  @extend %first;
}

.last {
  @extend %last;
}

.row {
  margin-left: -$gutter-width / 2;
  margin-right: -$gutter-width / 2;
  & + .row {
    margin-top: $gutter-width;
  }
}

.flexbox{
  .row {
    display: flex;
    flex-flow: row wrap;
    [class*="col"] {
      flex: none;
      padding-right: $gutter-width / 2;
      padding-left: $gutter-width / 2;
    }
    .col {
      flex: 1;
    }
  }
}

.no-flexbox {
  .row {
    display: block;
    @include clearfix;
  }
  [class*="col"] {
    float: left;
    padding: 0 $gutter-width / 2;
    min-height: 1px;
    @include clearfix;
  }
}

// Default - 12 Cols Layout

@for $i from 1 through $total-columns {
  .col-#{$i} {
    width: percentage($i / $total-columns);
  }
  .col-offset-#{$i} {
    margin-left: percentage($i / $total-columns);
  }
}

.col-full, .col-1of1 {
  width: 100%;
}

.col-1of2, .col-2of4 {
  width: 50%;
}

.col-1of3 {
  width: 33.3333%;
}

.col-2of3 {
  width: 66.6666%;
}

.col-1of4 {
  width: 25%;
}

.col-3of4 {
  width: 75%;
}

.col-centered {
  float: none;
  margin: 0 auto;
}

.equal-height {
  display: table;
  .gutter {
    display: block;
    width: 1px;
  }
  > .gutter:last-child {
    display: none;
  }
  [class*="col-"] {
    float: none;
    display: table-cell;
    position: relative;  }
  .panel {
    float: none;
    display: table-cell;
    position: relative;
  }
}

// Block grid
// TODO: find a way to automatically generate block size with SASS lists

[class*="block-grid-"] {
  display: block;
  padding: 0;
  margin: 0;
  @include clearfix;
  .block-grid-col, & > li {
    display: inline;
    float: left;
    height: auto;
    padding: 0 $gutter-width/2;
    list-style: none;
  }
  .block-grid-col:nth-child(n), li:nth-child(n) {
    clear: none;
  }
}

.block-grid-2 {
  .block-grid-col, & > li {
    width: 50%;
  }
  .block-grid-col:nth-child(2n+1), li:nth-child(2n+1) {
    clear: left;
  }
}

.block-grid-3 {
  .block-grid-col, & > li {
    width: 33.333333%;

  }
  .block-grid-col:nth-child(3n+1), li:nth-child(3n+1) {
    clear: left;
  }
}

.block-grid-4 {
  .block-grid-col, & > li {
    width: 25%;
  }
  .block-grid-col:nth-child(4n+1), li:nth-child(4n+1) {
    clear: left;
  }
}

.block-grid-5 {
  .block-grid-col, & > li {
    width: 20%;
  }
  .block-grid-col:nth-child(5n+1), li:nth-child(5n+1) {
    clear: left;
  }
}

